<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.5 on win32)" generated="20250928 18:56:49.145" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="C:\workspace\Avenga\tests">
<suite id="s1-s1" name="Books" source="C:\workspace\Avenga\tests\Books.robot">
<kw name="Create Session To API" library="Settings" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>fakerestapi</arg>
<arg>${BASE_URL}</arg>
<arg>verify=${False}</arg>
<arg>disable_warnings=${True}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250928 18:56:49.517" level="INFO">Creating Session using : alias=fakerestapi, url=https://fakerestapi.azurewebsites.net, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250928 18:56:49.517" endtime="20250928 18:56:49.517"/>
</kw>
<status status="PASS" starttime="20250928 18:56:49.517" endtime="20250928 18:56:49.517"/>
</kw>
<test id="s1-s1-t1" name="TC01 Get All Books" line="15">
<kw name="GET On [/${API}/${VERSION}/Books] Endpoint And Validate That Status Code Is [200]" library="GET" sourcename="GET on [${ENDPOINT}] endpoint and validate that status code is [${EXPECTED_STATUS_CODE}]">
<doc>Send get request and validate status code</doc>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.001" level="INFO">GET Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:50.001" level="INFO">GET Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body=[{"id":1,"title":"Book 1","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":100,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-27T16:56:48.5506616+00:00"},{"id":2,"title":"Book 2","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":200,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-26T16:56:48.5515933+00:00"},{"id":3,"title":"Book 3","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":300,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-25T16:56:48.5546722+00:00"},{"id":4,"title":"Book 4","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":400,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-24T16:56:48.5555589+00:00"},{"id":5,"title":"Book 5","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":500,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-23T16:56:48.556975+00:00"},{"id":6,"title":"Book 6","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":600,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-22T16:56:48.5587836+00:00"},{"id":7,"title":"Book 7","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":700,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-21T16:56:48.5597013+00:00"},{"id":8,"title":"Book 8","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":800,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-20T16:56:48.5617999+00:00"},{"id":9,"title":"Book 9","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":900,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-19T16:56:48.5626246+00:00"},{"id":10,"title":"Book 10","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1000,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-18T16:56:48.56413+00:00"},{"id":11,"title":"Book 11","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1100,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-17T16:56:48.5649943+00:00"},{"id":12,"title":"Book 12","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1200,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-16T16:56:48.5668045+00:00"},{"id":13,"title":"Book 13","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1300,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-15T16:56:48.5676821+00:00"},{"id":14,"title":"Book 14","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1400,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-14T16:56:48.5694264+00:00"},{"id":15,"title":"Book 15","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1500,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-13T16:56:48.5701597+00:00"},{"id":16,"title":"Book 16","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1600,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-12T16:56:48.5718799+00:00"},{"id":17,"title":"Book 17","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1700,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-11T16:56:48.5725775+00:00"},{"id":18,"title":"Book 18","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1800,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-10T16:56:48.5730172+00:00"},{"id":19,"title":"Book 19","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":1900,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-09T16:56:48.5738118+00:00"},{"id":20,"title":"Book 20","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":2000,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-08T16:56:48.5760453+00:00"},{"id":21,"title":"Book 21","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":2100,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-07T16:56:48.5772476+00:00"},{"id":22,"title":"Book 22","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lore... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250928 18:56:50.001" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:49.517" endtime="20250928 18:56:50.001"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.003" endtime="20250928 18:56:50.003"/>
</kw>
<msg timestamp="20250928 18:56:50.005" level="INFO">${JSON_Response} = ('PASS', [{'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lore...</msg>
<status status="PASS" starttime="20250928 18:56:50.003" endtime="20250928 18:56:50.005"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.007" level="INFO">${JSON_Response} = ('PASS', [{'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lore...</msg>
<status status="PASS" starttime="20250928 18:56:50.005" endtime="20250928 18:56:50.007"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${Actual_Response_Body} = ('PASS', [{'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lore...</msg>
<status status="PASS" starttime="20250928 18:56:50.007" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${Actual_Response_Body} = ('PASS', [{'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lore...</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<status status="PASS" starttime="20250928 18:56:49.517" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${booklist}</var>
<arg>${JSON_Response}</arg>
<arg>1</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${booklist} = [{'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem...</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${first_book}</var>
<arg>${booklist}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${first_book} = {'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem ...</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${id}</var>
<arg>${first_book}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${id} = 1</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${title}</var>
<arg>${first_book}</arg>
<arg>title</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${title} = Book 1</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${description}</var>
<arg>${first_book}</arg>
<arg>description</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${description} = Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.
</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${pageCount}</var>
<arg>${first_book}</arg>
<arg>pageCount</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.009" level="INFO">${pageCount} = 100</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${excerpt}</var>
<arg>${first_book}</arg>
<arg>excerpt</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.014" level="INFO">${excerpt} = Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.
Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.
Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.
Lorem lorem lorem. Lorem lore...</msg>
<status status="PASS" starttime="20250928 18:56:50.009" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${publishDate}</var>
<arg>${first_book}</arg>
<arg>publishDate</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250928 18:56:50.014" level="INFO">${publishDate} = 2025-09-27T16:56:48.5506616+00:00</msg>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${id}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250928 18:56:50.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${title}</arg>
<arg>Book 1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${description}</arg>
<arg>Lorem lorem lorem.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${pageCount}</arg>
<arg>100</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250928 18:56:50.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${excerpt}</arg>
<arg>Lorem lorem lorem.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${publishDate}</arg>
<arg>^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?([+-]\\d{2}:\\d{2}|Z)$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.014"/>
</kw>
<status status="PASS" starttime="20250928 18:56:49.517" endtime="20250928 18:56:50.014"/>
</test>
<test id="s1-s1-t2" name="TC02 Get Book By Valid Id" line="36">
<kw name="GET On [/${API}/${VERSION}/Books/1] Endpoint And Validate That Status Code Is [200]" library="GET" sourcename="GET on [${ENDPOINT}] endpoint and validate that status code is [${EXPECTED_STATUS_CODE}]">
<doc>Send get request and validate status code</doc>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.486" level="INFO">GET Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/1 
 path_url=/api/v1/Books/1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:50.486" level="INFO">GET Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/1 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"id":1,"title":"Book 1","description":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","pageCount":100,"excerpt":"Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\nLorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n","publishDate":"2025-09-27T16:56:49.1391379+00:00"} 
 </msg>
<msg timestamp="20250928 18:56:50.486" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.486"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.486" endtime="20250928 18:56:50.486"/>
</kw>
<msg timestamp="20250928 18:56:50.486" level="INFO">${JSON_Response} = ('PASS', {'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem...</msg>
<status status="PASS" starttime="20250928 18:56:50.486" endtime="20250928 18:56:50.486"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${JSON_Response} = ('PASS', {'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem...</msg>
<status status="PASS" starttime="20250928 18:56:50.486" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem...</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 1, 'title': 'Book 1', 'description': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n', 'pageCount': 100, 'excerpt': 'Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem...</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Validate That The Response Contains ['id': 1] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Validate That The Response Contains ['title': 'Book 1'] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.014" endtime="20250928 18:56:50.490"/>
</test>
<test id="s1-s1-t3" name="TC03 Create Book With Valid Payload" line="41">
<kw name="Generate Random String" library="String">
<var>${first_digit}</var>
<arg>1</arg>
<arg>123456789</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${first_digit} = 9</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rest}</var>
<arg>4</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${rest} = 0049</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rnd_id}</var>
<arg>${first_digit}${rest}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${rnd_id} = 90049</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rnd_title}</var>
<arg>5</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${rnd_title} = fPmrA</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rnd_desc}</var>
<arg>15</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${rnd_desc} = XKbPJXoIjEanUnf</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=${rnd_id}</arg>
<arg>title=${rnd_title}</arg>
<arg>description=${rnd_desc}</arg>
<arg>pageCount=200</arg>
<arg>excerpt=Sample excerpt</arg>
<arg>publishDate=2025-01-01T00:00:00</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:50.490" level="INFO">${PAYLOAD} = {'id': '90049', 'title': 'fPmrA', 'description': 'XKbPJXoIjEanUnf', 'pageCount': '200', 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'}</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.490"/>
</kw>
<kw name="POST On [/${API}/${VERSION}/Books] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [200]" library="POST" sourcename="POST On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send post request and validate status code</doc>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.535" level="INFO">POST Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '154', 'Content-Type': 'application/json'} 
 body=b'{"id": "90049", "title": "fPmrA", "description": "XKbPJXoIjEanUnf", "pageCount": "200", "excerpt": "Sample excerpt", "publishDate": "2025-01-01T00:00:00"}' 
 </msg>
<msg timestamp="20250928 18:56:50.535" level="INFO">POST Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"id":90049,"title":"fPmrA","description":"XKbPJXoIjEanUnf","pageCount":200,"excerpt":"Sample excerpt","publishDate":"2025-01-01T00:00:00"} 
 </msg>
<msg timestamp="20250928 18:56:50.535" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<msg timestamp="20250928 18:56:50.535" level="INFO">${JSON_Response} = ('PASS', {'id': 90049, 'title': 'fPmrA', 'description': 'XKbPJXoIjEanUnf', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.535" level="INFO">${JSON_Response} = ('PASS', {'id': 90049, 'title': 'fPmrA', 'description': 'XKbPJXoIjEanUnf', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.535" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 90049, 'title': 'fPmrA', 'description': 'XKbPJXoIjEanUnf', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.535" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 90049, 'title': 'fPmrA', 'description': 'XKbPJXoIjEanUnf', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Validate That The Response Contains ['id': ${rnd_id}] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.535"/>
</kw>
<kw name="Validate That The Response Contains ['title': '${rnd_title}'] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.543" endtime="20250928 18:56:50.543"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.535" endtime="20250928 18:56:50.543"/>
</kw>
<kw name="Validate That The Response Contains ['description': '${rnd_desc}'] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.543" endtime="20250928 18:56:50.543"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.543" endtime="20250928 18:56:50.543"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.490" endtime="20250928 18:56:50.543"/>
</test>
<test id="s1-s1-t4" name="TC04 Update Book With Valid Payload" line="53">
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=1</arg>
<arg>title=Updated Book</arg>
<arg>description=Updated Desc</arg>
<arg>pageCount=150</arg>
<arg>excerpt=Updated excerpt</arg>
<arg>publishDate=2025-01-01T00:00:00</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:50.545" level="INFO">${PAYLOAD} = {'id': '1', 'title': 'Updated Book', 'description': 'Updated Desc', 'pageCount': '150', 'excerpt': 'Updated excerpt', 'publishDate': '2025-01-01T00:00:00'}</msg>
<status status="PASS" starttime="20250928 18:56:50.545" endtime="20250928 18:56:50.545"/>
</kw>
<kw name="PUT On [/${API}/${VERSION}/Books/1] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [200]" library="PUT" sourcename="PUT On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send put request and validate status code</doc>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.590" level="INFO">PUT Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/1 
 path_url=/api/v1/Books/1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '155', 'Content-Type': 'application/json'} 
 body=b'{"id": "1", "title": "Updated Book", "description": "Updated Desc", "pageCount": "150", "excerpt": "Updated excerpt", "publishDate": "2025-01-01T00:00:00"}' 
 </msg>
<msg timestamp="20250928 18:56:50.590" level="INFO">PUT Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/1 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"id":1,"title":"Updated Book","description":"Updated Desc","pageCount":150,"excerpt":"Updated excerpt","publishDate":"2025-01-01T00:00:00"} 
 </msg>
<msg timestamp="20250928 18:56:50.590" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.547" endtime="20250928 18:56:50.590"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.590" endtime="20250928 18:56:50.594"/>
</kw>
<msg timestamp="20250928 18:56:50.594" level="INFO">${JSON_Response} = ('PASS', {'id': 1, 'title': 'Updated Book', 'description': 'Updated Desc', 'pageCount': 150, 'excerpt': 'Updated excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.590" endtime="20250928 18:56:50.594"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.594" level="INFO">${JSON_Response} = ('PASS', {'id': 1, 'title': 'Updated Book', 'description': 'Updated Desc', 'pageCount': 150, 'excerpt': 'Updated excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.594" endtime="20250928 18:56:50.594"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.594" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 1, 'title': 'Updated Book', 'description': 'Updated Desc', 'pageCount': 150, 'excerpt': 'Updated excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.594" endtime="20250928 18:56:50.594"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.596" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 1, 'title': 'Updated Book', 'description': 'Updated Desc', 'pageCount': 150, 'excerpt': 'Updated excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.594" endtime="20250928 18:56:50.596"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.545" endtime="20250928 18:56:50.596"/>
</kw>
<kw name="Validate That The Response Contains ['title': 'Updated Book'] Data" library="Validations" sourcename="Validate that the response contains [${EXPECTED_DATA}] data">
<doc>Validation of response</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<arg>${EXPECTED_DATA}</arg>
<arg>ignore_case=${False}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250928 18:56:50.596" endtime="20250928 18:56:50.596"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.596" endtime="20250928 18:56:50.596"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.543" endtime="20250928 18:56:50.596"/>
</test>
<test id="s1-s1-t5" name="TC05 Delete Book With Valid Id" line="58">
<kw name="Generate Random String" library="String">
<var>${first_digit}</var>
<arg>1</arg>
<arg>123456789</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.598" level="INFO">${first_digit} = 8</msg>
<status status="PASS" starttime="20250928 18:56:50.596" endtime="20250928 18:56:50.598"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rest}</var>
<arg>4</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.598" level="INFO">${rest} = 9026</msg>
<status status="PASS" starttime="20250928 18:56:50.598" endtime="20250928 18:56:50.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rnd_id}</var>
<arg>${first_digit}${rest}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250928 18:56:50.598" level="INFO">${rnd_id} = 89026</msg>
<status status="PASS" starttime="20250928 18:56:50.598" endtime="20250928 18:56:50.598"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rnd_title}</var>
<arg>5</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.598" level="INFO">${rnd_title} = pdYrr</msg>
<status status="PASS" starttime="20250928 18:56:50.598" endtime="20250928 18:56:50.598"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rnd_desc}</var>
<arg>15</arg>
<arg>[LETTERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:50.600" level="INFO">${rnd_desc} = svXEdaBFOipTcIK</msg>
<status status="PASS" starttime="20250928 18:56:50.600" endtime="20250928 18:56:50.600"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=${rnd_id}</arg>
<arg>title=${rnd_title}</arg>
<arg>description=${rnd_desc}</arg>
<arg>pageCount=200</arg>
<arg>excerpt=Sample excerpt</arg>
<arg>publishDate=2025-01-01T00:00:00</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:50.600" level="INFO">${PAYLOAD} = {'id': '89026', 'title': 'pdYrr', 'description': 'svXEdaBFOipTcIK', 'pageCount': '200', 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'}</msg>
<status status="PASS" starttime="20250928 18:56:50.600" endtime="20250928 18:56:50.600"/>
</kw>
<kw name="POST On [/${API}/${VERSION}/Books] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [200]" library="POST" sourcename="POST On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send post request and validate status code</doc>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.630" level="INFO">POST Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '154', 'Content-Type': 'application/json'} 
 body=b'{"id": "89026", "title": "pdYrr", "description": "svXEdaBFOipTcIK", "pageCount": "200", "excerpt": "Sample excerpt", "publishDate": "2025-01-01T00:00:00"}' 
 </msg>
<msg timestamp="20250928 18:56:50.630" level="INFO">POST Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=200, reason=OK 
 headers={'Content-Type': 'application/json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"id":89026,"title":"pdYrr","description":"svXEdaBFOipTcIK","pageCount":200,"excerpt":"Sample excerpt","publishDate":"2025-01-01T00:00:00"} 
 </msg>
<msg timestamp="20250928 18:56:50.630" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.600" endtime="20250928 18:56:50.630"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.630"/>
</kw>
<msg timestamp="20250928 18:56:50.630" level="INFO">${JSON_Response} = ('PASS', {'id': 89026, 'title': 'pdYrr', 'description': 'svXEdaBFOipTcIK', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.630"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.630" level="INFO">${JSON_Response} = ('PASS', {'id': 89026, 'title': 'pdYrr', 'description': 'svXEdaBFOipTcIK', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.630"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.630" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 89026, 'title': 'pdYrr', 'description': 'svXEdaBFOipTcIK', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.630"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.630" level="INFO">${Actual_Response_Body} = ('PASS', {'id': 89026, 'title': 'pdYrr', 'description': 'svXEdaBFOipTcIK', 'pageCount': 200, 'excerpt': 'Sample excerpt', 'publishDate': '2025-01-01T00:00:00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.630"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.600" endtime="20250928 18:56:50.630"/>
</kw>
<kw name="DELETE On [/${API}/${VERSION}/Books/${rnd_id}] Endpoint and Validate Status Code Is [200]" library="DELETE" sourcename="DELETE On [${THE_ENDPOINT}] Endpoint and Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send delete request and validate status code</doc>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.679" level="INFO">DELETE Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/89026 
 path_url=/api/v1/Books/89026 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:50.679" level="INFO">DELETE Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/89026 
 status=200, reason=OK 
 headers={'Content-Length': '0', 'Date': 'Sun, 28 Sep 2025 16:56:48 GMT', 'Server': 'Kestrel', 'api-supported-versions': '1.0'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:50.679" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.679"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20250928 18:56:50.679" level="FAIL">JSONDecodeError: Expecting value: line 1 column 1 (char 0)</msg>
<status status="FAIL" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.679"/>
</kw>
<msg timestamp="20250928 18:56:50.679" level="INFO">${JSON_Response} = ('FAIL', 'JSONDecodeError: Expecting value: line 1 column 1 (char 0)')</msg>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.679"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.679" level="INFO">${JSON_Response} = ('FAIL', 'JSONDecodeError: Expecting value: line 1 column 1 (char 0)')</msg>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.679"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.679" level="INFO">${Actual_Response_Body} = ('FAIL', 'JSONDecodeError: Expecting value: line 1 column 1 (char 0)')</msg>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.679"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.679" level="INFO">${Actual_Response_Body} = ('FAIL', 'JSONDecodeError: Expecting value: line 1 column 1 (char 0)')</msg>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.679"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.630" endtime="20250928 18:56:50.679"/>
</kw>
<kw name="GET On [/${API}/${VERSION}/Books/${rnd_id}] Endpoint And Validate That Status Code Is [404]" library="GET" sourcename="GET on [${ENDPOINT}] endpoint and validate that status code is [${EXPECTED_STATUS_CODE}]">
<doc>Send get request and validate status code</doc>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:50.953" level="INFO">GET Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/89026 
 path_url=/api/v1/Books/89026 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:50.953" level="INFO">GET Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/89026 
 status=404, reason=Not Found 
 headers={'Content-Type': 'application/problem+json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Not Found","status":404,"traceId":"00-9a1b503c9f72f3419c7618c8ea931425-fde0ada5079adb4e-00"} 
 </msg>
<msg timestamp="20250928 18:56:50.953" level="INFO">${Response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.953"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:50.953" endtime="20250928 18:56:50.957"/>
</kw>
<msg timestamp="20250928 18:56:50.957" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-9a1b503c9f72f3419c7618c8ea931425-fde0ada5079adb4e-00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.953" endtime="20250928 18:56:50.957"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.957" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-9a1b503c9f72f3419c7618c8ea931425-fde0ada5079adb4e-00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:50.957"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:50.957" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-9a1b503c9f72f3419c7618c8ea931425-fde0ada5079adb4e-00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:50.957"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:50.957" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-9a1b503c9f72f3419c7618c8ea931425-fde0ada5079adb4e-00'})</msg>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:50.957"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.679" endtime="20250928 18:56:50.957"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.596" endtime="20250928 18:56:50.957"/>
</test>
<test id="s1-s1-t6" name="TC06 Get Book By Invalid Id" line="73">
<kw name="GET On [/${API}/${VERSION}/Books/99999] Endpoint And Validate That Status Code Is [404]" library="GET" sourcename="GET on [${ENDPOINT}] endpoint and validate that status code is [${EXPECTED_STATUS_CODE}]">
<doc>Send get request and validate status code</doc>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.050" level="INFO">GET Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/99999 
 path_url=/api/v1/Books/99999 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:51.050" level="INFO">GET Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/99999 
 status=404, reason=Not Found 
 headers={'Content-Type': 'application/problem+json; charset=utf-8; v=1.0', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked', 'api-supported-versions': '1.0'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Not Found","status":404,"traceId":"00-48141c0b2d2a67479df304981894c43d-5d21765a7e1acf4d-00"} 
 </msg>
<msg timestamp="20250928 18:56:51.050" level="INFO">${Response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:51.050"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.050"/>
</kw>
<msg timestamp="20250928 18:56:51.050" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-48141c0b2d2a67479df304981894c43d-5d21765a7e1acf4d-00'})</msg>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.050"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.050" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-48141c0b2d2a67479df304981894c43d-5d21765a7e1acf4d-00'})</msg>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.050"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.050" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-48141c0b2d2a67479df304981894c43d-5d21765a7e1acf4d-00'})</msg>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.050"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.050" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.4', 'title': 'Not Found', 'status': 404, 'traceId': '00-48141c0b2d2a67479df304981894c43d-5d21765a7e1acf4d-00'})</msg>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.050"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:51.050"/>
</kw>
<status status="PASS" starttime="20250928 18:56:50.957" endtime="20250928 18:56:51.050"/>
</test>
<test id="s1-s1-t7" name="TC07 Get Book With Non-Numeric Id" line="76">
<kw name="GET On [/${API}/${VERSION}/Books/abc] Endpoint And Validate That Status Code Is [400]" library="GET" sourcename="GET on [${ENDPOINT}] endpoint and validate that status code is [${EXPECTED_STATUS_CODE}]">
<doc>Send get request and validate status code</doc>
<kw name="GET On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.094" level="INFO">GET Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/abc 
 path_url=/api/v1/Books/abc 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:51.094" level="INFO">GET Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/abc 
 status=400, reason=Bad Request 
 headers={'Content-Type': 'application/problem+json; charset=utf-8', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-9b780a73cba55c47abc49dbe721c2276-d8ee1e89ab1ca84b-00","errors":{"id":["The value 'abc' is not valid."]}} 
 </msg>
<msg timestamp="20250928 18:56:51.094" level="INFO">${Response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.094"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.094" endtime="20250928 18:56:51.094"/>
</kw>
<msg timestamp="20250928 18:56:51.094" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-9b780a73cba55c47abc49dbe721c2276-d8ee1e89ab1ca8...</msg>
<status status="PASS" starttime="20250928 18:56:51.094" endtime="20250928 18:56:51.094"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.094" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-9b780a73cba55c47abc49dbe721c2276-d8ee1e89ab1ca8...</msg>
<status status="PASS" starttime="20250928 18:56:51.094" endtime="20250928 18:56:51.094"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.094" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-9b780a73cba55c47abc49dbe721c2276-d8ee1e89ab1ca8...</msg>
<status status="PASS" starttime="20250928 18:56:51.094" endtime="20250928 18:56:51.094"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.099" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-9b780a73cba55c47abc49dbe721c2276-d8ee1e89ab1ca8...</msg>
<status status="PASS" starttime="20250928 18:56:51.099" endtime="20250928 18:56:51.099"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.099"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.050" endtime="20250928 18:56:51.099"/>
</test>
<test id="s1-s1-t8" name="TC08 Create Book With Missing Required Field" line="79">
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=${EMPTY}</arg>
<arg>pageCount=120</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:51.099" level="INFO">${PAYLOAD} = {'id': '', 'pageCount': '120'}</msg>
<status status="PASS" starttime="20250928 18:56:51.099" endtime="20250928 18:56:51.099"/>
</kw>
<kw name="POST On [/${API}/${VERSION}/Books] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [400]" library="POST" sourcename="POST On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send post request and validate status code</doc>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">POST Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '30', 'Content-Type': 'application/json'} 
 body=b'{"id": "", "pageCount": "120"}' 
 </msg>
<msg timestamp="20250928 18:56:51.132" level="INFO">POST Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=400, reason=Bad Request 
 headers={'Content-Type': 'application/problem+json; charset=utf-8', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-c4fb81c0dd72ef46b28164a5f6ee3fea-fb8d72e5d5bba545-00","errors":{"$.id":["The JSON value could not be converted to System.Int32. Path: $.id | LineNumber: 0 | BytePositionInLine: 9."]}} 
 </msg>
<msg timestamp="20250928 18:56:51.132" level="INFO">${Response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:51.099" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<msg timestamp="20250928 18:56:51.132" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-c4fb81c0dd72ef46b28164a5f6ee3fea-fb8d72e5d5bba5...</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-c4fb81c0dd72ef46b28164a5f6ee3fea-fb8d72e5d5bba5...</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-c4fb81c0dd72ef46b28164a5f6ee3fea-fb8d72e5d5bba5...</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-c4fb81c0dd72ef46b28164a5f6ee3fea-fb8d72e5d5bba5...</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.099" endtime="20250928 18:56:51.132"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.099" endtime="20250928 18:56:51.132"/>
</test>
<test id="s1-s1-t9" name="TC09 Create Book With Invalid Data Type" line="83">
<kw name="Generate Random String" library="String">
<var>${first_digit}</var>
<arg>1</arg>
<arg>123456789</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${first_digit} = 9</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${rest}</var>
<arg>4</arg>
<arg>0123456789</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${rest} = 0142</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${rnd_id}</var>
<arg>${first_digit}${rest}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${rnd_id} = 90142</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=${rnd_id}</arg>
<arg>title=Invalid Book</arg>
<arg>description=Bad</arg>
<arg>pageCount=one hundred</arg>
<arg>excerpt=Bad excerpt</arg>
<arg>publishDate=2025-01-01T00:00:00</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:51.132" level="INFO">${PAYLOAD} = {'id': '90142', 'title': 'Invalid Book', 'description': 'Bad', 'pageCount': 'one hundred', 'excerpt': 'Bad excerpt', 'publishDate': '2025-01-01T00:00:00'}</msg>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.132"/>
</kw>
<kw name="POST On [/${API}/${VERSION}/Books] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [400]" library="POST" sourcename="POST On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send post request and validate status code</doc>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.180" level="INFO">POST Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 path_url=/api/v1/Books 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '154', 'Content-Type': 'application/json'} 
 body=b'{"id": "90142", "title": "Invalid Book", "description": "Bad", "pageCount": "one hundred", "excerpt": "Bad excerpt", "publishDate": "2025-01-01T00:00:00"}' 
 </msg>
<msg timestamp="20250928 18:56:51.180" level="INFO">POST Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books 
 status=400, reason=Bad Request 
 headers={'Content-Type': 'application/problem+json; charset=utf-8', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-a954e07c7612764cb3a6220bb07a8a75-92f66f53d077f642-00","errors":{"$.pageCount":["The JSON value could not be converted to System.Int32. Path: $.pageCount | LineNumber: 0 | BytePositionInLine: 89."]}} 
 </msg>
<msg timestamp="20250928 18:56:51.180" level="INFO">${Response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:51.147" endtime="20250928 18:56:51.180"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<msg timestamp="20250928 18:56:51.180" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-a954e07c7612764cb3a6220bb07a8a75-92f66f53d077f6...</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.180" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-a954e07c7612764cb3a6220bb07a8a75-92f66f53d077f6...</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.180" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-a954e07c7612764cb3a6220bb07a8a75-92f66f53d077f6...</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.180" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-a954e07c7612764cb3a6220bb07a8a75-92f66f53d077f6...</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.180"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.132" endtime="20250928 18:56:51.180"/>
</test>
<test id="s1-s1-t10" name="TC10 Update Book With Non-Existing Id" line="90">
<kw name="Create Dictionary" library="BuiltIn">
<var>${PAYLOAD}</var>
<arg>id=abv123</arg>
<arg>title=Ghost Book</arg>
<arg>description=None</arg>
<arg>pageCount=10</arg>
<arg>excerpt=None</arg>
<arg>publishDate=2025-01-01T00:00:00</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250928 18:56:51.180" level="INFO">${PAYLOAD} = {'id': 'abv123', 'title': 'Ghost Book', 'description': 'None', 'pageCount': '10', 'excerpt': 'None', 'publishDate': '2025-01-01T00:00:00'}</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.180"/>
</kw>
<kw name="PUT On [/${API}/${VERSION}/Books/99999] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [400]" library="PUT" sourcename="PUT On [${THE_ENDPOINT}] Endpoint With Payload [${PAYLOAD}] And Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send put request and validate status code</doc>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>json=${PAYLOAD}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.228" level="INFO">PUT Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/99999 
 path_url=/api/v1/Books/99999 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '138', 'Content-Type': 'application/json'} 
 body=b'{"id": "abv123", "title": "Ghost Book", "description": "None", "pageCount": "10", "excerpt": "None", "publishDate": "2025-01-01T00:00:00"}' 
 </msg>
<msg timestamp="20250928 18:56:51.228" level="INFO">PUT Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/99999 
 status=400, reason=Bad Request 
 headers={'Content-Type': 'application/problem+json; charset=utf-8', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-b38be3e235c9ed409b9607d54af1f576-fb9dcc61d30ab54c-00","errors":{"$.id":["The JSON value could not be converted to System.Int32. Path: $.id | LineNumber: 0 | BytePositionInLine: 15."]}} 
 </msg>
<msg timestamp="20250928 18:56:51.228" level="INFO">${Response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.228"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.228"/>
</kw>
<msg timestamp="20250928 18:56:51.228" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-b38be3e235c9ed409b9607d54af1f576-fb9dcc61d30ab5...</msg>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.228"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.228" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-b38be3e235c9ed409b9607d54af1f576-fb9dcc61d30ab5...</msg>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.228"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.228" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-b38be3e235c9ed409b9607d54af1f576-fb9dcc61d30ab5...</msg>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.228"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.228" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-b38be3e235c9ed409b9607d54af1f576-fb9dcc61d30ab5...</msg>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.228"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.228"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.180" endtime="20250928 18:56:51.228"/>
</test>
<test id="s1-s1-t11" name="TC11 Delete Book With Non-Existing Id" line="94">
<kw name="DELETE On [/${API}/${VERSION}/Books/ABC] Endpoint and Validate Status Code Is [400]" library="DELETE" sourcename="DELETE On [${THE_ENDPOINT}] Endpoint and Validate Status Code Is [${EXPECTED_STATUS_CODE}]">
<doc>Send delete request and validate status code</doc>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>fakerestapi</arg>
<arg>url=${THE_ENDPOINT}</arg>
<arg>expected_status=${EXPECTED_STATUS_CODE}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20250928 18:56:51.278" level="INFO">DELETE Request : url=https://fakerestapi.azurewebsites.net/api/v1/Books/ABC 
 path_url=/api/v1/Books/ABC 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20250928 18:56:51.278" level="INFO">DELETE Response : url=https://fakerestapi.azurewebsites.net/api/v1/Books/ABC 
 status=400, reason=Bad Request 
 headers={'Content-Type': 'application/problem+json; charset=utf-8', 'Date': 'Sun, 28 Sep 2025 16:56:49 GMT', 'Server': 'Kestrel', 'Transfer-Encoding': 'chunked'} 
 body={"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"One or more validation errors occurred.","status":400,"traceId":"00-ad0c85350e1c0643bca1a0d2ae4785b0-9af4740d61f3c94a-00","errors":{"id":["The value 'ABC' is not valid."]}} 
 </msg>
<msg timestamp="20250928 18:56:51.278" level="INFO">${Response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.278"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${JSON_Response}</var>
<arg>Convert String To Json</arg>
<arg>${Response.content}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Convert String To Json" library="JSONLibrary">
<arg>${Response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" starttime="20250928 18:56:51.278" endtime="20250928 18:56:51.280"/>
</kw>
<msg timestamp="20250928 18:56:51.280" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-ad0c85350e1c0643bca1a0d2ae4785b0-9af4740d61f3c9...</msg>
<status status="PASS" starttime="20250928 18:56:51.278" endtime="20250928 18:56:51.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${JSON_Response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.280" level="INFO">${JSON_Response} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-ad0c85350e1c0643bca1a0d2ae4785b0-9af4740d61f3c9...</msg>
<status status="PASS" starttime="20250928 18:56:51.280" endtime="20250928 18:56:51.280"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${Actual_Response_Body}</var>
<arg>${JSON_Response}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250928 18:56:51.280" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-ad0c85350e1c0643bca1a0d2ae4785b0-9af4740d61f3c9...</msg>
<status status="PASS" starttime="20250928 18:56:51.280" endtime="20250928 18:56:51.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Actual_Response_Body}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250928 18:56:51.280" level="INFO">${Actual_Response_Body} = ('PASS', {'type': 'https://tools.ietf.org/html/rfc7231#section-6.5.1', 'title': 'One or more validation errors occurred.', 'status': 400, 'traceId': '00-ad0c85350e1c0643bca1a0d2ae4785b0-9af4740d61f3c9...</msg>
<status status="PASS" starttime="20250928 18:56:51.280" endtime="20250928 18:56:51.280"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.280"/>
</kw>
<status status="PASS" starttime="20250928 18:56:51.228" endtime="20250928 18:56:51.280"/>
</test>
<status status="PASS" starttime="20250928 18:56:49.186" endtime="20250928 18:56:51.280"/>
</suite>
<status status="PASS" starttime="20250928 18:56:49.165" endtime="20250928 18:56:51.280"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="11" fail="0" skip="0" id="s1-s1" name="Books">Tests.Books</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250928 18:56:49.193" level="ERROR">Error in file 'C:\workspace\Avenga\tests\Books.robot' on line 2: Resource file 'Settings.robot' does not exist.</msg>
</errors>
</robot>
